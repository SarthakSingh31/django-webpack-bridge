name: Test, Publish
on: [push, pull_request]

jobs:
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.9]
        django-version: [2.1.*, 2.2.*, 3.0.*, 3.1.*]
    
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
      - name: Install Django Version ${{ matrix.django-version }}
        run: python -m pip install 'Django==${{ matrix.django-version }}'
      - name: Install dependencies
        run: |
          python -m pip install .
          pip install pycodestyle
      - name: Lint with pycodestyle
        run: pycodestyle webpack_bridge
      - name: Run Tests
        run: DJANGO_SETTINGS_MODULE=test_files.settings python -m django test webpack_bridge

  publish:
    if: startsWith(github.ref, 'refs/tags/v')

    needs: [test-python]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install poetry
        run: pip install poetry~=1.1
      - name: Set Python package version to ${{github.ref}}
        run: poetry version ${GITHUB_REF##*/v}
      - name: Build Package
        run: poetry build
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'
      - run: npm install
      - name: Set Node package version to ${{github.ref}}
        run: npm version ${GITHUB_REF##*/v} --no-git-tag-version
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_API_TOKEN }}